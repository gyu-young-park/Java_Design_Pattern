학습 목표
    컴포짓 패턴으로 트리 구조를 구현할 수 있다.

키워드
    컨테이너/내용물/동일시
    -컨테이너와 내용물을 동일시하는 패턴이다.

component(interface역할) => 물론 구현하는 사람 마음대로이다. class로 하든, interface로 하든
이것을 구현 상속하는
Leaf(operator 메서드)
composite -> 이것은 leaf를 담는 그릇(컨테이너)
    -컴포넌트를 더하는거 add, 빼는거 remove  , 가져오는거 getChild

예제 코드
    파일 시스템으로 주로 만든다.

root폴더 -> home -> garam -> music 폴더(-> track1, track2 파일), picture폴더(-> pic파일), doc폴더(->doc1파일)
        -> user ->  java 파일

기본 설계 따라서 component를 만들자

어떨 때 사용하는가??
1, part - whole 계층 구조를 만들 때 (트리 구조)
2, 클라이언트가 composites 객체와 individual 객체 사이의 차이를 무시하도록 만들게 하기위해서
클라이언트는 composite 구조에 있는 모든 객체를 동일하게 다룰 것이다.

같은 component 형을 composite와 leaf가 사용하기 때문에 composite안에 composite를 넣는 것이 가능하고, leaf를 넣는 것이 가능한 것이다.
leaf와 composite간의 실질적인 차이가 있지만, 이들을 차이가 없는 하나의 객체로 클라이언트가 다루게 하기 위해서 사용하는 패턴이 composite패턴인 것이다.
그래서 컨테이너와 내용물들을 동일시 하는 패턴인 것이다.
